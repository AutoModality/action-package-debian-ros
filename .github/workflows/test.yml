name: Release
on: push
jobs:
  default-version:
    runs-on: [x64, self-hosted,linux,build]
    name: Default version uses timestamps and package can be installed
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          dev-repo-entitlement: ${{ secrets.CLOUDSMITH_READ_DEV_ENTITLEMENT }}
          release-repo-entitlement: ${{ secrets.CLOUDSMITH_READ_RELEASE_ENTITLEMENT }}
      - name: The generated package
        run: echo "The artifact is ${{ steps.package.outputs.artifact-path }}"
      - name: Validate package file provided exists
        uses: ./.github/actions/test@local
        with:
          package-file: ${{ steps.package.outputs.artifact-path }}
          package-version: ${{ steps.package.outputs.version }}      
  version:
    runs-on: [x64, self-hosted,linux,build]
    name: Package uses version provided
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          version: 0.0.13
      - name: The generated package
        run: echo "The artifact is ${{ steps.package.outputs.artifact-path }}"
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, 'debian-package-test-action_0.0.13_amd64.deb') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain 0.0.13 "
          exit 1
      - name: Confirm the version is output
        if: steps.package.outputs.version != '0.0.13'
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be 0.0.13 "
          exit 1
  cached-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [[x64, self-hosted,linux,build], [arm64,self-hosted,linux, build]]
      fail-fast: false
    name: Cache used still passes version test
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            obj-*-gnu
          # see https://developer.github.com/v3/actions/self-hosted-runners/
          # runner.architecture doesn't work
          key: ${{ matrix.os }}-${{ hashFiles('debian/control') }}
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          version: 0.0.13
      - name: The generated package
        run: echo "The artifact is ${{ steps.package.outputs.artifact-path }}"
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, 'debian-package-test-action_0.0.13') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain 0.0.13 "
          exit 1
      - name: Confirm the version is output
        if: steps.package.outputs.version != '0.0.13'
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be 0.0.13 "
          exit 1
  pull-request-number:
    runs-on: [x64, self-hosted,linux,build]
    name: Pull request number alone is used
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          pull-request-number: 13
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, 'debian-package-test-action_13.') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain 13 "
          exit 1
      - name: Confirm version
        if: contains(steps.package.outputs.version,'13') != true
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be 13 "
          exit 1
  build-number:
    runs-on: [x64, self-hosted,linux,build]
    name: Build number only is used
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          build-number: 13
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, 'debian-package-test-action_13.') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain 13 "
          exit 1
      - name: Confirm version
        if: contains(steps.package.outputs.version, '13.') != true
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be 13 "
          exit 1
  branch-underscore:
    runs-on: [x64, self-hosted,linux,build]
    name: Underscores in branches should be escaped
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
           branch: branch/with_underscore
      - name: Confirm package name doesn't have underscore
        if: contains(steps.package.outputs.artifact-path, '.branch-with-underscore_amd64.deb') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain branch-with-underscore "
          exit 1
      - name: Confirm version
        if: contains(steps.package.outputs.version, 'branch-with-underscore')  != true
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be branch-with-underscore "
          exit 1
  branch:
    runs-on: [x64, self-hosted,linux,build]
    name: Branch only uses timestamp with branch
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          branch: XX-13
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, '.XX-13_amd64.deb') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain branch "
          exit 1
      - name: Confirm version
        if: contains(steps.package.outputs.version, 'XX-13')  != true
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be XX-13 "
          exit 1
  pr-branch-build:
    runs-on: [x64, self-hosted,linux,build]
    name: Pull request, branch and build number all used
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          pull-request-number: 7
          branch: XX-13
          build-number: 8
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, 'debian-package-test-action_7.XX-13.') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain branch "
          exit 1
      - name: Confirm version
        if: contains(steps.package.outputs.version, '7.XX-13.8.') != true
        run: |
          echo "Expected ${{ steps.package.outputs.version }} to be 7.XX-13.8"
          exit 1 
  branch-with-path:
    runs-on: [x64, self-hosted,linux,build]
    name: Path branch like feature/XX-13 is escaped
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Package
        id: package
        uses: ./  #use the current project relative to root
        with:
          pull-request-number: 7
          branch: feature/XX-13
          build-number: 8
      - name: Confirm package name uses version
        if: contains(steps.package.outputs.artifact-path, 'debian-package-test-action_7.feature-XX-13.8.') != true
        run: |
          echo "Expected ${{ steps.package.outputs.artifact-path }} to contain branch "
          exit 1
      - name: Confirm version
        if: contains(steps.package.outputs.version, '7.feature-XX-13.8') != true
        run: |
          echo "Expected ${{ steps.package.outputs.version}} to be 7.feature-XX-13.8"
          exit 1 
  release:
    runs-on: [x64, self-hosted,linux,build]
    name: Release if all tests pass on master branch
    needs:
      - branch-with-path
      - branch-underscore
      - branch
      - pull-request-number
      - build-number
      - pr-branch-build
      - version
      - default-version
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v1
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/git
            @semantic-release/changelog@3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: azure/docker-login@v1
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          login-server: docker.cloudsmith.io
          username: cloudsmith-push@automodality.com
          password: ${{ secrets.CLOUDSMITH_API_KEY }}
      - name: Push Docker to Cloudsmith
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          image_name="docker.cloudsmith.io/automodality/release/amros-build-melodic"
          image_name_and_version="$image_name":${{ steps.semantic.outputs.new_release_version }}
          image_name_latest="$image_name":latest
          docker build -t "$image_name_and_version" .
          docker tag "$image_name_and_version" "$image_name_latest"
          docker push "$image_name_and_version"
          docker push "$image_name_latest"
